# 2024-02-03 08:30
#
name: act - Magisk Build - release

env:
  TAG_NAME:      "Magisk"
  TAG_VERSION:   "Magisk-v26.3.1"
  TAG_BUILD:     "-b"
  TAG_REF:       "0000000"
  PROG_NAME:     "Magisk"
  PROG_VERSION:  "v26.3.1"
  VERSION:       "26.3.1"
  #signing keys env variable checks
  ANDROID_SIGNING_KEY: '${{ secrets.ANDROID_SIGNING_KEY }}'
  #  signingKeyBase64: '${{ secrets.ANDROID_SIGNING_KEY }}'
  #  alias:            '${{ secrets.ANDROID_ALIAS }}'
  #  keyStorePassword: '${{ secrets.ANDROID_KEY_STORE_PASSWORD }}'
  #  keyPassword:      '${{ secrets.ANDROID_KEY_PASSWORD }}'

on:
  workflow_dispatch:
    inputs:
      patch_ondk: 
          description: patch ondk url
          type: boolean
          default: true
          required: true
      run_tests: 
          description: Run tests
          type: boolean
          default: false
          required: true

jobs:
  build:
    name: Build Magisk 
    runs-on: ubuntu-latest
    env:
      SCCACHE_DIRECT: false
    strategy:
      fail-fast: false
    steps:
      - name: Check out
        uses: actions/checkout@v4
        with:
          submodules: "recursive"
          fetch-depth: 0

      - name: get version code
        shell: bash
        run: |
          _version_code_=$(grep "magisk.versionCode" gradle.properties | awk -F"=" '{print $2}')
          if [[ "$_version_code_" != "" ]]; then
            echo "PROG_VERSION_CODE=$_version_code_" >> $GITHUB_ENV
            _sver2_=${_version_code_:${#_version_code_}-2:2}
            _ver_sver_=${_version_code_:0:${#_version_code_}-2}
            _sver_=${_ver_sver_:${#_ver_sver_}-1:1}
            _ver_=${_ver_sver_:0:-1}
            _ver_sver_sver2_=$_ver_.$_sver_.$_sver2_

            echo "VERSION=$_ver_sver_sver2_" >> $GITHUB_ENV
            echo "PROG_VERSION=v$_ver_sver_sver2_" >> $GITHUB_ENV
          fi

      - name: print VERSION
        shell: bash
        run: |
            echo "VERSION=${{ env.VERSION }}"
            echo "PROG_VERSION=${{ env.PROG_VERSION }}"

      - name: patch ondk url in build.py
        if: ${{ inputs.patch_ondk }}
        shell: bash
        run: |
          grep "/ondk/" build.py
          sed -ibak "s!github.com\/topjohnwu\/ondk\/releases\/!github.com\/deep-soft\/ondk\/releases\/!" build.py
          grep "/ondk/" build.py

      - name: Setup environment
        uses: ./.github/actions/setup

      - name: Build release
        run: ./build.py -vr all

      - name: Stop gradle daemon
        run: ./gradlew --stop

      - name: Copy apk to signed-apk
        shell: bash
        run: |
          mkdir -p signed-apk;
          cp ./out/app-release.apk ./signed-apk/${{ env.PROG_NAME }}-${{ env.PROG_VERSION }}.apk
#          if [[ "${{ env.PROG_VERSION_CODE }}" == "" ]]; then
#            cp ./out/app-release.apk ./signed-apk/${{ env.PROG_NAME }}-${{ env.PROG_VERSION }}.apk
#          else
#            cp ./out/app-release.apk ./signed-apk/${{ env.PROG_NAME }}-v${{ env.PROG_VERSION_CODE }}.apk
#          fi;

      - uses: deep-soft/sign-android-release@master
        name: Sign app APK
        if: env.ANDROID_SIGNING_KEY != null
        id: sign-magisk
        with:
          releaseDirectory: ./signed-apk
          signingKeyBase64: ${{ secrets.ANDROID_SIGNING_KEY }}
          alias: ${{ secrets.ANDROID_ALIAS }}
          keyStorePassword: ${{ secrets.ANDROID_KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.ANDROID_KEY_PASSWORD }}
        env:
          # override default build-tools version (29.0.3) -- optional
          BUILD_TOOLS_VERSION: "34.0.0"

      - name: Publish Release
        continue-on-error: true
        uses: deep-soft/action-gh-release@v2.1
        with:
          draft: true
          tag_name: ${{ env.TAG_NAME }}-${{ env.PROG_VERSION }}
          files: |
            ./out/*.apk
            ${{steps.sign-magisk.outputs.signedReleaseFile}}

      - name: Publish Release
        continue-on-error: true
        uses: deep-soft/action-gh-release@v2.1
        with:
          draft: true
          tag_name: ${{ env.TAG_NAME }}
          files: |
            ${{steps.sign-magisk.outputs.signedReleaseFile}}

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.sha }}
          path: out
          compression-level: 9

      - name: Upload mapping and native debug symbols
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.sha }}-symbols
          path: app/build/outputs
          compression-level: 9

  test:
    name: Test on API ${{ matrix.api }}
    if: ${{ inputs.run_tests }}
    runs-on: ubuntu-latest
    needs: build
    strategy:
      fail-fast: false
      matrix:
        api: [23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34]

    steps:
      - name: Check out
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python 3
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: ${{ github.sha }}
          path: out

      - name: Enable KVM group perms
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: AVD test
        run: scripts/avd_test.sh ${{ matrix.api }}
