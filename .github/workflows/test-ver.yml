#2023-10-15 20:00
name: act - test - ver, subver

env:
  TAG_NAME:      "Magisk"
  TAG_VERSION:   "Magisk-v26.3.1"
  TAG_BUILD:     "-b"
  TAG_REF:       "0000000"
  PROG_NAME:     "Magisk"
  PROG_VERSION:  "v26.3.1"
  VERSION:       "26.3.1"
  #signing keys env variable checks
  ANDROID_SIGNING_KEY: '${{ secrets.ANDROID_SIGNING_KEY }}'
  #  signingKeyBase64: '${{ secrets.ANDROID_SIGNING_KEY }}'
  #  alias:            '${{ secrets.ANDROID_ALIAS }}'
  #  keyStorePassword: '${{ secrets.ANDROID_KEY_STORE_PASSWORD }}'
  #  keyPassword:      '${{ secrets.ANDROID_KEY_PASSWORD }}'

on:
  workflow_dispatch:
    inputs:
      patch_ondk: 
          description: patch ondk url
          type: boolean
          default: true
          required: true
      build_debug: 
          description: build debug
          type: boolean
          default: false
          required: true
      symbols: 
          description: Upload symbols
          type: boolean
          default: false
          required: true
      run_tests: 
          description: Run tests
          type: boolean
          default: false
          required: true

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        # os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - name: Check out
        uses: deep-soft/checkout@v3
        with:
          #submodules: "recursive"
          fetch-depth: 0

      - name: get version code
        shell: bash
        run: |
          _version_code_=$(grep "magisk.versionCode" gradle.properties | awk -F"=" '{print $2}')
          if [[ "$_version_code_" != "" ]]; then
            echo "PROG_VERSION_CODE=$_version_code_" >> $GITHUB_ENV
            _sver2_=${_version_code_:${#_version_code_}-2:2}
            _ver_sver_=${_version_code_:0:${#_version_code_}-2}
            _sver_=${_ver_sver_:${#_ver_sver_}-1:1}
            _ver_=${_ver_sver_:0:-1}
            _ver_sver_sver2_=$_ver_.$_sver_.$_sver2_

            echo "VERSION=$_ver_sver_sver2_" >> $GITHUB_ENV
            echo "PROG_VERSION=v$_ver_sver_sver2_" >> $GITHUB_ENV
          fi

      - name: print version program version
        shell: bash
        run: |
            echo "VERSION=${{ env.VERSION }}"
            echo "PROG_VERSION=${{ env.PROG_VERSION }}"
